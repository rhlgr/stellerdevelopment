(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[671],{5671:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return P}});var o=t(5893),i=t(4494),r=t(7294),a=t(5648),s=t(7021),c=t(722),u=t(2212),l=t(47),d=t(1852),v=t(6736),x=t(6260),f=t(7160),p=t(6610),h=t(5991),m=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],y=function(){function e(n){(0,p.Z)(this,e);var t=[new u.Vector3(1,1,0),new u.Vector3(-1,1,0),new u.Vector3(1,-1,0),new u.Vector3(-1,-1,0),new u.Vector3(1,0,1),new u.Vector3(-1,0,1),new u.Vector3(1,0,-1),new u.Vector3(-1,0,-1),new u.Vector3(0,1,1),new u.Vector3(0,-1,1),new u.Vector3(0,1,-1),new u.Vector3(0,-1,-1)],o=new Array(512),i=new Array(512);n||(n=1),n*=65536,(n=Math.floor(n))<256&&(n|=n<<8);for(var r=0;r<256;r++){var a;a=1&r?m[r]^255&n:m[r]^n>>8&255,o[r]=o[r+256]=a,i[r]=i[r+256]=t[a%12]}this._seed=n,this._offsetMatrix=[new u.Vector3(0,0,0),new u.Vector3(0,0,1),new u.Vector3(0,1,0),new u.Vector3(0,1,1),new u.Vector3(1,0,0),new u.Vector3(1,0,1),new u.Vector3(1,1,0),new u.Vector3(1,1,1)],this.shaderChunk={defines:"",header:'#define GLSLIFY 1\n// From https://github.com/hughsk/glsl-noise/blob/master/periodic/2d.glsl\n\n//\n// GLSL textureless classic 2D noise "cnoise",\n// with an RSL-style periodic variant "pnoise".\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n// Version: 2011-08-22\n//\n// Many thanks to Ian McEwan of Ashima Arts for the\n// ideas for permutation and gradient selection.\n//\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n// Distributed under the MIT license. See LICENSE file.\n// https://github.com/ashima/webgl-noise\n//\n\nvec4 mod289(vec4 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n\nvec4 permute(vec4 x) { return mod289(((x * 34.0) + 1.0) * x); }\n\nvec4 taylorInvSqrt(vec4 r) { return 1.79284291400159 - 0.85373472095314 * r; }\n\nvec2 fade(vec2 t) { return t * t * t * (t * (t * 6.0 - 15.0) + 10.0); }\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\n// Classic Perlin noise, periodic variant\nfloat perlin(vec2 P) {\n\n  vec2 rep = vec2(255.0, 255.0);\n\n  vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\n  vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\n  Pi = mod(Pi, rep.xyxy); // To create noise with explicit period\n  Pi = mod289(Pi);        // To avoid truncation effects in permutation\n  vec4 ix = Pi.xzxz;\n  vec4 iy = Pi.yyww;\n  vec4 fx = Pf.xzxz;\n  vec4 fy = Pf.yyww;\n\n  vec4 i = permute(permute(ix) + iy);\n\n  vec4 gx = fract(i * (1.0 / 41.0)) * 2.0 - 1.0;\n  vec4 gy = abs(gx) - 0.5;\n  vec4 tx = floor(gx + 0.5);\n  gx = gx - tx;\n\n  vec2 g00 = vec2(gx.x, gy.x);\n  vec2 g10 = vec2(gx.y, gy.y);\n  vec2 g01 = vec2(gx.z, gy.z);\n  vec2 g11 = vec2(gx.w, gy.w);\n\n  vec4 norm = taylorInvSqrt(\n      vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11)));\n  g00 *= norm.x;\n  g01 *= norm.y;\n  g10 *= norm.z;\n  g11 *= norm.w;\n\n  float n00 = dot(g00, vec2(fx.x, fy.x));\n  float n10 = dot(g10, vec2(fx.y, fy.y));\n  float n01 = dot(g01, vec2(fx.z, fy.z));\n  float n11 = dot(g11, vec2(fx.w, fy.w));\n\n  vec2 fade_xy = fade(Pf.xy);\n  vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\n  float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\n  return map(2.3 * n_xy, -1.0, 1.0, 0.0, 1.0);\n}\n\nfloat fbm(vec2 pos, vec4 props) {\n  float persistance = props.x;\n  float lacunarity = props.y;\n  float redistribution = props.z;\n  int octaves = int(props.w);\n\n  float result = 0.0;\n  float amplitude = 1.0;\n  float frequency = 1.0;\n  float maximum = amplitude;\n\n  for (int i = 0; i < 2; i++) {\n\n    vec2 p = pos.xy * frequency;\n\n    float noiseVal = perlin(p);\n    result += noiseVal * amplitude;\n\n    frequency *= lacunarity;\n    amplitude *= persistance;\n    maximum += amplitude;\n  }\n\n  float redistributed = pow(result, redistribution);\n  return redistributed / maximum;\n}',main:"",uniforms:[{three_noise_seed:this._seed}]},this.perm=o,this.gradP=i}return(0,h.Z)(e,[{key:"_fade",value:function(e){return e*e*e*(e*(6*e-15)+10)}},{key:"_lerp",value:function(e,n,t){return(1-t)*e+t*n}},{key:"_gradient",value:function(e){return e instanceof u.Vector3?e.x+this.perm[e.y+this.perm[e.z]]:e.x+this.perm[e.y]}},{key:"get2",value:function(e){void 0!==e.z&&(e=new u.Vector2(e.x,e.y));var n=new u.Vector2(Math.floor(e.x),Math.floor(e.y));e.sub(n),n.x&=255,n.y&=255;for(var t=[],o=0;o<4;o++){var i=this._offsetMatrix[2*o],r=new u.Vector2(i.x,i.y),a=this.gradP[this._gradient((new u.Vector2).addVectors(n,r))],s=new u.Vector2(a.x,a.y),c=(new u.Vector2).subVectors(e,r);t.push(s.dot(c))}var l=this._fade(e.x),d=this._fade(e.y);return this._lerp(this._lerp(t[0],t[2],l),this._lerp(t[1],t[3],l),d)}},{key:"get3",value:function(e){var n=new u.Vector3(Math.floor(e.x),Math.floor(e.y),Math.floor(e.z));e.sub(n),n.x&=255,n.y&=255,n.z&=255;for(var t=[],o=0;o<8;o++){var i=this._offsetMatrix[o],r=this.gradP[this._gradient((new u.Vector3).addVectors(n,i))],a=(new u.Vector3).subVectors(e,i);t.push(r.dot(a))}var s=this._fade(e.x),c=this._fade(e.y),l=this._fade(e.z);return this._lerp(this._lerp(this._lerp(t[0],t[4],s),this._lerp(t[1],t[5],s),l),this._lerp(this._lerp(t[2],t[6],s),this._lerp(t[3],t[7],s),l),c)}}],[{key:"map",value:function(e,n,t,o,i){return(e-n)*(i-o)/(t-n)+o}}]),e}(),w=function(){function e(n){(0,p.Z)(this,e);var t=n.seed,o=n.scale,i=n.persistance,r=n.lacunarity,a=n.octaves,s=n.redistribution;this._noise=new y(t),this._scale=o||1,this._persistance=i||.5,this._lacunarity=r||2,this._octaves=a||6,this._redistribution=s||1}return(0,h.Z)(e,[{key:"get2",value:function(e){for(var n=0,t=1,o=1,i=t,r=this._noise.get2.bind(this._noise),a=0;a<this._octaves;a++){n+=r(new u.Vector2(e.x*this._scale*o,e.y*this._scale*o))*t,o*=this._lacunarity,i+=t*=this._persistance}return Math.pow(n,this._redistribution)/i}},{key:"get3",value:function(e){for(var n=0,t=1,o=1,i=t,r=this._noise.get3.bind(this._noise),a=0;a<this._octaves;a++){n+=r(new u.Vector3(e.x*this._scale*o,e.y*this._scale*o,e.z*this._scale*o))*t,o*=this._lacunarity,i+=t*=this._persistance}return Math.pow(n,this._redistribution)/i}}]),e}(),g=function(e){var n=e.count,t=e.mouseX,i=e.mouseY,l=e.mouseZ,d=e.introDone,v=void 0!==d&&d,p=(0,a.Ky)().clock,h=(0,r.useRef)(),m=(0,r.useRef)(),y=(0,r.useState)(0),g=y[0],_=y[1],b=(0,s.Z)().width,M=(0,r.useMemo)((function(){return new u.Object3D}),[]),z=(0,r.useMemo)((function(){return b<=c.A.small}),[b]),V=(0,r.useMemo)((function(){for(var e=[],t=new w({seed:u.Math.seededRandom(30),scale:2.3,octaves:2,persistance:0,lacunarity:0,redistribution:1,height:0}),o=0;o<n;o++){var i=new u.Vector3,r=new u.Vector3,a=u.Math.randFloat(0,2*Math.PI),s=u.Math.randFloat(-1,1),c=Math.acos(s);i.x=4*Math.sin(c)*Math.cos(a),i.y=4*Math.sin(c)*Math.sin(a),i.z=4*Math.cos(c),Math.random()>.1&&(i.x+=t.get3(i),i.y+=t.get3(i),i.z+=t.get3(i)),r.x=u.Math.randFloat(-20,20),r.y=u.Math.randFloat(-20,20),r.z=u.Math.randFloat(-6,6);var l=f.al(r.x,r.y,r.z),d=f.al(i.x,i.y,i.z),v=f.al(i.x,i.y,i.z),x=f.al(0,0,0),p=f.al(0,0,0);e.push({spreadPosition:l,position:d,original:v,velocity:x,acc:p,maxForce:.02,maxSpeed:.2,played:!1})}return e}),[n]);return(0,a.xQ)((function(){var e=(0,x.uZ)((0,x.UI)([2.5,7.88],[5e-4,.045],p.getElapsedTime()),5e-4,.045);_((0,x.uZ)(e,5e-4,.045)),V.forEach((function(e,n){var o=v?e.position[0]:e.spreadPosition[0],r=v?e.position[1]:e.spreadPosition[1],a=v?e.position[2]:e.spreadPosition[2],s=e.position[0],c=e.position[1],u=e.position[2],d=f.Ue(),m=f.Ue(),y=f.al(t,i,l);if(p.getElapsedTime()>2)if(f.$X(m,e.spreadPosition,e.position),!e.played&&f.kE(m)>.1&&!v)f.t7(e.spreadPosition,e.spreadPosition,e.position,g),M.position.set(o,r,a);else{e.played=!0,f.$X(d,y,e.position);var w=f.al(0,0,0),_=f.al(0,0,0);if(f.kE(d)<1.2)(0,x.o8)(d,d,e.maxSpeed),d=f.bA(d,d,-.1),w=f.Ue(),f.$X(w,d,e.velocity),(0,x.b9)(w,w,e.maxForce);else{d=f.$X(d,e.original,e.position);var b=f.kE(d),z=0;b<1.2&&(z=e.maxSpeed*b,(0,x.o8)(d,d,z)),_=f.Ue(),f.$X(_,d,e.velocity),(0,x.b9)(_,_,e.maxForce)}e.acc=f.IH(e.acc,e.acc,w),e.acc=f.IH(e.acc,e.acc,_),f.IH(e.position,e.position,e.velocity),f.IH(e.velocity,e.velocity,e.acc),f.bA(e.acc,e.acc,0),M.position.set(s,c,u)}else M.position.set(o,r,a);M.updateMatrix(),h.current.setMatrixAt(n,M.matrix)})),h.current.instanceMatrix.needsUpdate=!0})),(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("instancedMesh",{ref:h,args:[null,null,n],children:[(0,o.jsx)("sphereBufferGeometry",{args:z?[.025,14,14]:[.018,4,4]}),(0,o.jsx)("shaderMaterial",{ref:m,vertexShader:"precision mediump float;\n#define GLSLIFY 1\n\nvarying vec3 vNormal;\nvarying vec3 vPos;\nuniform vec3 uMouse;\nuniform float uDelta;\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v)\n  {\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n// Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n  }\n\nfloat fbm3d(vec3 x, const in int it) {\n    float v = 0.0;\n    float a = 0.5;\n    vec3 shift = vec3(100);\n\n    \n    for (int i = 0; i < 32; ++i) {\n        if(i<it) {\n            v += a * snoise(x);\n            x = x * 2.0 + shift;\n            a *= 0.5;\n        }\n    }\n    return v;\n}\n\nconst float UPPER_BOUNDS = 800.0;\n\nvoid main() {\n    vec4 mvPosition = instanceMatrix * vec4( position, 1.0 );\n    vec4 modelViewPosition = modelViewMatrix * mvPosition;\n\n    gl_Position = projectionMatrix * modelViewPosition;\n}",fragmentShader:"precision mediump float;\n#define GLSLIFY 1\n\nvarying vec3 vPos;\nvarying vec2 vUv;\nuniform vec3 uMouse;\nuniform float uDelta;\n\nconst float UPPER_BOUNDS = 800.0;\n\nvoid main() {\n\n    \n    gl_FragColor = vec4(vec3(1.0), 1.0);\n}\n"})]})})},_=function(e){return{getIntroDone:function(){return e.app.introDone}}},b={},M=function(e){return(0,i.$j)(_,b)(e)}((function(e){var n=e.getIntroDone,t=e.hasIntro,i=e.enableScroll,f=n()||!t,p=(0,l.Z)(),h=(0,s.Z)(),m=h.width,y=h.height,w=(0,r.useRef)(),_=(0,r.useRef)(),b=(0,a.Ky)(),M=b.camera,z=b.gl,V=b.clock,P=(0,r.useState)(0,0,0),S=P[0],C=P[1],L=new u.Quaternion,E=new u.Vector3(0,0,1),A=Math.abs(5e-5),I=L.setFromAxisAngle(E,A),k=new u.Quaternion,j=new u.Vector3(0,-1,0),D=(0,r.useState)(.003),R=D[0],F=D[1],Z=k.setFromAxisAngle(j,R),B=(0,r.useMemo)((function(){return m<=c.A.small}),[m]),T=(0,r.useMemo)((function(){return B?2500:8e3}),[B]),O=(0,r.useCallback)((function(){M.aspect=m/y,z.setSize(m,y,!0),M.updateProjectionMatrix()}),[z,B,m,y,M]),U=(0,r.useCallback)((function(e){C(-10,-10,-10)}),[]);return(0,a.xQ)((function(){if(f)F(12e-5);else{var e=(0,x.uZ)((0,x.UI)([6.2,8.6],[12e-5,.003],V.getElapsedTime()),12e-5,.003);F((0,x.uZ)(.003-e,12e-5,.003))}V.getElapsedTime()<6.5&&!f?(M.position.applyQuaternion(I),M.up.applyQuaternion(I)):(M.position.applyQuaternion(Z),M.up.applyQuaternion(Z)),M.lookAt(_.current.position)})),(0,r.useEffect)((function(){f||i?(0,v.b)():(0,v.b)("hidden")}),[f,i]),(0,r.useEffect)((function(){!B&&O()}),[B,O]),(0,d.Z)((function(e){e.isLastTick&&!p&&O()})),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("group",{ref:_,children:(0,o.jsx)(g,{count:T,mouseX:S.x,mouseY:S.y,mouseZ:S.z,introDone:f})}),(0,o.jsxs)("mesh",{ref:w,visible:!1,onPointerLeave:U,onPointerMove:function(e){return C(e.point)},children:[(0,o.jsx)("sphereGeometry",{args:[4.1,32,32]}),(0,o.jsx)("meshBasicMaterial",{color:"white",side:u.DoubleSide})]})]})})),z=t(5049),V=(0,t(6104).Z)(),P=function(e){var n=e.inView,t=e.hasIntro,u=void 0!==t&&t,l=e.scaleBig,d=void 0!==l&&l,v=e.enableScroll,x=(0,r.useState)(1),f=x[0],p=x[1],h=(0,r.useState)(),m=h[0],y=h[1],w=(0,s.Z)(),g=w.width,_=w.height,b=(0,r.useMemo)((function(){return g===c.A.small}),[g]),P=(0,r.useMemo)((function(){return g<c.A.small}),[g]),S=(0,i.I0)();(0,r.useEffect)((function(){p(Math.min(window.devicePixelRatio,2)),y(P?g/_/2:d?g/_:g/2/_)}),[P,d,_,g]),(0,r.useEffect)((function(){!n&&u&&v&&S((0,z.AO)(!0))}),[n,S,u,v]);var C=function(){return(0,a.xQ)((function(){return null}),1e3)};return(0,o.jsx)(o.Fragment,{children:(0,o.jsx)(a.Xz,{camera:{position:[0,0,P?d?9:13.5:b?d?11:11.5:d?8:11.5],aspect:m},colorManagement:!1,gl:{antialias:!1},pixelRatio:f,children:n?(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("color",{attach:"background",args:["black"]}),(0,o.jsx)(i.zt,{store:V,children:(0,o.jsx)(M,{hasIntro:u,enableScroll:v})})]}):(0,o.jsx)(C,{})})})}},6736:function(e,n,t){"use strict";function o(){(function(){var e=document.body.getBoundingClientRect();return e.left+e.right<=window.innerWidth})()&&function(e,n){var t=n.style.paddingRight;t=""===t?0:parseFloat(t),n.dataset.paddingRight=t,n.style.paddingRight="".concat(t+e,"px")}(function(){var e=document.createElement("div");Object.assign(e.style,{position:"absolute",top:"-9999px",width:"50px",height:"50px",overflow:"scroll"}),document.body.appendChild(e);var n=e.getBoundingClientRect().width-e.clientWidth;return document.body.removeChild(e),n}(),document.body)}function i(){!function(e){var n=e.dataset.paddingRight;"undefined"!==typeof n&&(e.style.paddingRight=n,e.dataset.paddingRight=null)}(document.body)}function r(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];e?o():i()}var a;t.d(n,{T:function(){return x},b:function(){return f}});var s="initial",c=["PageUp","PageDown","Home","End"];function u(e){(e=e||window.event).preventDefault&&e.preventDefault(),e.returnValue=!1}function l(e){if(c.includes(e.key))return e.preventDefault(),!1}var d=!1,v=!1;function x(){if("undefined"===typeof document||v)return d;try{document.createEvent("TouchEvent"),v=!0,d=!0}catch(e){v=!0,d=!1}return d}function f(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"initial";if(a||(a=document.querySelector("html")),x()){if("initial"===e){if(!window.BIA_SCROLL_BLOCK)return;window.addEventListener&&(window.removeEventListener("scroll",u,!1),window.removeEventListener("touchmove",u,!1)),window.onmousewheel=document.onmousewheel=null,window.ontouchmove=null,window.onwheel=null,document.onkeydown=null,window.BIA_SCROLL_BLOCK=!1}if("hidden"===e){if(window.BIA_SCROLL_BLOCK)return;window.removeEventListener&&(window.addEventListener("scroll",u,!1),window.addEventListener("touchmove",u,!1)),window.onwheel=u,window.ontouchmove=u,window.onmousewheel=document.onmousewheel=u,document.onkeydown=l,window.BIA_SCROLL_BLOCK=!0}}s!==e&&("hidden"===e?r(!0):(r(!1),document.documentElement.style.position="initial")),a.style.overflow=e,s=e}},47:function(e,n,t){"use strict";var o=t(7294),i=t(6736);n.Z=function(){var e=(0,o.useState)(!1),n=e[0],t=e[1];return(0,o.useEffect)((function(){var e=(0,i.T)();e!==n&&t(e)}),[]),n}}}]);